{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kenta.hoji.ea/Desktop/pr-chat-app/app/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/kenta.hoji.ea/Desktop/pr-chat-app/app/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0BACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/kenta.hoji.ea/Desktop/pr-chat-app/app/actions/generate-pr.ts"],"sourcesContent":["\"use server\";\n\nimport OpenAI from \"openai\";\n\nexport type GeneratePRResponse =\n  | { success: true; content: string }\n  | { success: false; error: string };\n\n// ❶ ChatInterface 側の \"Message\" と同じ構造を定義\nexport interface Message {\n  role: \"user\" | \"assistant\";\n  content: string;\n}\n\n// OpenAI初期化\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY ?? \"\",\n});\n\n// ❷ generatePR は「これまでの会話履歴」と「section」などの追加要素を受け取る\nexport async function generatePR(\n  messages: Message[],\n  section: string\n): Promise<GeneratePRResponse> {\n  console.log(\"generatePR called\");\n  console.log(\"section:\", section);\n  console.log(\"messages:\", messages);\n\n  // ❸ system ロールとして最初に「あなたはキャリアコンサルタント...」という指示を追加\n  //    これにより、常に一番最初のコンテキストとして AI が意識するようにする\n  const systemPrompt = `\nあなたは、学生の就職活動をサポートするプロのキャリアコンサルタントです。\nユーザーである学生から、学生時代に力をいれたことの活動内容を聞き出します。\nユーザーとの対話を通して、ユーザーが自身の学生時代の活動実績を棚卸しをし、\n自分の強みの再認識と、自己PR文の作成のサポートを目指します。\n\n#手順\nまず、以下の文章をユーザーに与えてください。\n「これから学生時代に力を入れたことについて、いくつか質問します。全部で10問ほどあります。」\n\n1. 学生時代に力をいれたことを聞き出す質問をしてください。\n2. 以下の項目を順番にひとつずつすべて質問してください。\n・何に取り組んだか（具体的な内容）\n・いつからいつまで\n・あなたの役割\n・動機\n・設定した目標の有無\n・直面した課題や背景\n・課題を乗り越えるための工夫や行動\n・取得した資格の有無\n・学びと成長\n3. 最後にユーザーが提供した回答と以下の制約条件を基に、\n学生時代に力をいれたことの活動における最高の自己PR文を出力してください。\n4. ユーザーの回答は抜け漏れなく、なるべく忠実に自己PR文に反映させてください。\n\n#制約条件\n・ユーザーに与える質問は、中学生でもわかるくらいの、単純で簡潔な質問にしてください。\n・質問は1回に1つだけです。\n・具体的な事例や行動が引き出せるような質問をしてください。\n\n# Output format\n・最後の自己PR文はPREP法に基づき、見出しのない、一つの文章で出力してください。（文字数は350～450文字程度）\n・文章は日本語で、流れが自然で論理的であることを重視してください。\n\n以上を踏まえて、あなたはキャリアコンサルタントとして丁寧に受け答えしてください。\n`;\n\n  try {\n    // ❹ OpenAIチャットAPIで渡す messages の先頭に system ロールを注入\n    //    あとはフロントからの messages をそのまま後ろにつなげる\n    const openAIMessages = [\n      { role: \"system\", content: systemPrompt },\n      ...messages.map((m) => ({\n        // OpenAIでは \"assistant\" か \"user\" か \"system\"\n        // 互換性があるため流用可能。必要に応じて変換する。\n        role: m.role,\n        content: m.content,\n      })),\n    ];\n\n    // ❺ ChatCompletionを呼ぶ\n    const completion = await openai.chat.completions.create({\n      // 参考: https://platform.openai.com/docs/models\n      model: \"chatgpt-4o-latest\", // or \"gpt-4\" if you have access\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      messages: openAIMessages,\n      temperature: 0.7,\n      max_tokens: 2000,\n    });\n\n    // ❻ アシスタントが返した応答\n    const generated = completion.choices[0].message?.content || \"\";\n\n    return {\n      success: true,\n      content: generated,\n    };\n  } catch (error: any) {\n    console.error(\"Error generating PR:\", error.response?.data || error.message || error);\n    return {\n      success: false,\n      error: \"AI生成中にエラーが発生しました。\",\n    };\n  }\n}"],"names":[],"mappings":";;;;;;AAEA;;;;AAYA,YAAY;AACZ,MAAM,SAAS,IAAI,gJAAA,CAAA,UAAM,CAAC;IACxB,QAAQ,QAAQ,GAAG,CAAC,cAAc,IAAI;AACxC;AAGO,eAAe,uCAAQ,GAAR,WACpB,QAAmB,EACnB,OAAe;IAEf,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,YAAY;IACxB,QAAQ,GAAG,CAAC,aAAa;IAEzB,iDAAiD;IACjD,0CAA0C;IAC1C,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCxB,CAAC;IAEC,IAAI;QACF,iDAAiD;QACjD,sCAAsC;QACtC,MAAM,iBAAiB;YACrB;gBAAE,MAAM;gBAAU,SAAS;YAAa;eACrC,SAAS,GAAG,CAAC,CAAC,IAAM,CAAC;oBACtB,2CAA2C;oBAC3C,2BAA2B;oBAC3B,MAAM,EAAE,IAAI;oBACZ,SAAS,EAAE,OAAO;gBACpB,CAAC;SACF;QAED,sBAAsB;QACtB,MAAM,aAAa,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtD,8CAA8C;YAC9C,OAAO;YACP,6DAA6D;YAC7D,aAAa;YACb,UAAU;YACV,aAAa;YACb,YAAY;QACd;QAEA,iBAAiB;QACjB,MAAM,YAAY,WAAW,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,WAAW;QAE5D,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,wBAAwB,MAAM,QAAQ,EAAE,QAAQ,MAAM,OAAO,IAAI;QAC/E,OAAO;YACL,SAAS;YACT,OAAO;QACT;IACF;AACF;;;IArFsB;;AAAA,+OAAA"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}